cmake_minimum_required(VERSION 3.17)

project(Project)

include(ExternalProject)

if(EXISTS ${CACHE_DIR}/glew-2.1.0.tgz)
	list(APPEND EP_ARGS URL ${CACHE_DIR}/glew-2.1.0.tgz)
else()
	list(APPEND EP_ARGS URL https://github.com/nigels-com/glew/releases/download/glew-2.1.0/glew-2.1.0.tgz)
	list(APPEND EP_ARGS DOWNLOAD_DIR ${CACHE_DIR})
endif()

#list(APPEND EP_ARGS SOURCE_DIR ${PACKAGE_DIR}/glew-2.1.0)

ExternalProject_Add(
	glew
	${EP_ARGS}
	SOURCE_SUBDIR build/cmake
	CMAKE_CACHE_ARGS
		-DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
		#-DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}
		-DCMAKE_CXX_EXTENSIONS:STRING=${CMAKE_CXX_EXTENSIONS}
		-DCMAKE_CXX_STANDARD_REQUIRED:STRING=${CMAKE_CXX_STANDARD_REQUIRED}
		-DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
		-DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
#		-DCMAKE_C_STANDARD:STRING=${CMAKE_C_STANDARD}
		-DCMAKE_C_EXTENSIONS:STRING=${CMAKE_C_EXTENSIONS}
		-DCMAKE_C_STANDARD_REQUIRED:STRING=${CMAKE_C_STANDARD_REQUIRED}
		-DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
		#-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}/usr/local
		-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
		-DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
)

